graph torch-jit-export (%name: "1"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 2
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 224
      }
      dim {
        dim_value: 224
      }
    }
  }
}
, %name: "2"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "3"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
    }
  }
}
, %name: "4"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "5"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 64
      }
    }
  }
}
, %name: "6"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 64
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "7"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "8"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "9"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 128
      }
    }
  }
}
, %name: "10"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 128
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "11"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "12"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "13"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "14"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "15"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 256
      }
    }
  }
}
, %name: "16"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 256
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "17"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "18"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "19"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "20"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "21"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "22"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "23"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "24"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "25"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "26"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 512
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_value: 3
      }
    }
  }
}
, %name: "27"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 512
      }
    }
  }
}
, %name: "28"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
      dim {
        dim_value: 25088
      }
    }
  }
}
, %name: "29"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "30"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "31"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "32"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 1000
      }
      dim {
        dim_value: 4096
      }
    }
  }
}
, %name: "33"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 1000
      }
    }
  }
}
) {
  %35 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%1, %2)
  %36 = Add[broadcast = 1, axis = 1](%35, %3)
  %37 = Relu(%36)
  %39 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%37, %4)
  %40 = Add[broadcast = 1, axis = 1](%39, %5)
  %41 = Relu(%40)
  %42 = MaxPool[dilations = [1, 1], kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%41)
  %44 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%42, %6)
  %45 = Add[broadcast = 1, axis = 1](%44, %7)
  %46 = Relu(%45)
  %48 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%46, %8)
  %49 = Add[broadcast = 1, axis = 1](%48, %9)
  %50 = Relu(%49)
  %51 = MaxPool[dilations = [1, 1], kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%50)
  %53 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%51, %10)
  %54 = Add[broadcast = 1, axis = 1](%53, %11)
  %55 = Relu(%54)
  %57 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%55, %12)
  %58 = Add[broadcast = 1, axis = 1](%57, %13)
  %59 = Relu(%58)
  %61 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%59, %14)
  %62 = Add[broadcast = 1, axis = 1](%61, %15)
  %63 = Relu(%62)
  %64 = MaxPool[dilations = [1, 1], kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%63)
  %66 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%64, %16)
  %67 = Add[broadcast = 1, axis = 1](%66, %17)
  %68 = Relu(%67)
  %70 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%68, %18)
  %71 = Add[broadcast = 1, axis = 1](%70, %19)
  %72 = Relu(%71)
  %74 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%72, %20)
  %75 = Add[broadcast = 1, axis = 1](%74, %21)
  %76 = Relu(%75)
  %77 = MaxPool[dilations = [1, 1], kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%76)
  %79 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%77, %22)
  %80 = Add[broadcast = 1, axis = 1](%79, %23)
  %81 = Relu(%80)
  %83 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%81, %24)
  %84 = Add[broadcast = 1, axis = 1](%83, %25)
  %85 = Relu(%84)
  %87 = Conv[kernel_shape = [3, 3], strides = [1, 1], pads = [1, 1, 1, 1], dilations = [1, 1], group = 1](%85, %26)
  %88 = Add[broadcast = 1, axis = 1](%87, %27)
  %89 = Relu(%88)
  %90 = MaxPool[dilations = [1, 1], kernel_shape = [2, 2], pads = [0, 0], strides = [2, 2]](%89)
  %91 = Reshape[shape = [2, -1]](%90)
  %92 = Transpose[perm = [1, 0]](%28)
  %94 = expand[size = [2, 4096]](%29)
  %95 = Gemm[alpha = 1, beta = 1](%91, %92, %94)
  %96 = Relu(%95)
  %98, %99 = Dropout[ratio = 0.5, is_test = 1](%96)
  %100 = Transpose[perm = [1, 0]](%30)
  %102 = expand[size = [2, 4096]](%31)
  %103 = Gemm[alpha = 1, beta = 1](%98, %100, %102)
  %104 = Relu(%103)
  %106, %107 = Dropout[ratio = 0.5, is_test = 1](%104)
  %108 = Transpose[perm = [1, 0]](%32)
  %110 = expand[size = [2, 1000]](%33)
  %111 = Gemm[alpha = 1, beta = 1](%106, %108, %110)
  return %name: "111"
type {
  tensor_type {
    elem_type: FLOAT
    shape {
      dim {
        dim_value: 2
      }
      dim {
        dim_value: 1000
      }
    }
  }
}

}